{"version":3,"sources":["controller/common.js","config/config.js","controller/userManager.js","views/Pages/ForgetPassword/ForgetPassword.js"],"names":["user","JSON","parse","localStorage","getItem","tokenHeader","accessToken","axiosConfig","headers","withCredentials","buildErrorParams","e","response","data","message","toString","stack","check","loginRequired","window","location","hash","generateObjectId","a","number","axios","get","config","server","ids","console","error","process","lastUrl","setLastUrl","url","checkUsername","username","urlStr","checkEmail","email","getAllGroups","result","groups","getAllOrganizations","groupNumber","organizations","getAllRequestUsers","results","getAllUsers","users","filter","u","validated","switchUserActive","activeValue","put","active","switchUserValidate","validatedValue","log","resValidated","push","organization","post","_id","resOrganization","isLoggedIn","logout","removeItem","loginLocal","password","setItem","stringify","signUpLocal","setup","firstName","lastName","selectedOrganization","phoneNumber","selectedGroupNumber","sendPasswordResetEmail","updatePermission","permissions","getAllPermissions","getProfile","profile","ForgetPassword","props","handleChange","event","setState","target","id","value","handleSubmit","preventDefault","state","then","catch","err","this","length","className","md","lg","xl","onSubmit","addonType","type","placeholder","autoComplete","onChange","color","disabled","validateForm","block","to","Component"],"mappings":"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","file":"static/js/forgetPassword.0822cc01.chunk.js","sourcesContent":["import axios from \"axios\";\nimport config from \"../config/config\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nlet tokenHeader = {};\nif (user && user.accessToken) {\n  tokenHeader = { \"x-access-token\": user.accessToken };\n}\n\nexport const axiosConfig = {\n  headers: tokenHeader,\n  withCredentials: true,\n};\nexport { config };\n\nexport function buildErrorParams(e) {\n  if (e.response && e.response.data && e.response.data.message)\n    return [e.toString() + \"\\nDetails: \" + e.response.data.message, \"error\"];\n  else return [e.stack, \"error\"];\n}\n\n/**\n * check if login needed\n * @param response\n * @returns {boolean}\n */\nexport function check(response) {\n  if (response.data.loginRequired) {\n    window.location.hash = \"login\";\n    return false;\n  }\n  return true;\n}\n\n/**\n * Generate a _id\n * @param {number} [number=1]\n * @return {{}}\n */\nexport async function generateObjectId(number = 1) {\n  try {\n    const response = await axios.get(\n      config.server + \"/api/v2/generate/id/\" + number,\n      axiosConfig\n    );\n    if (check(response)) {\n      return response.data.ids;\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n","const config = {\n  dev: {\n    // server: \"http://192.168.1.32:3000\",\n    // server: \"http://localhost:3000\",\n    server: \"https://aqueous-dusk-20175.herokuapp.com\",\n  },\n  prod: {\n    server: \"https://aqueous-dusk-20175.herokuapp.com\",\n  },\n};\nexport default process.env.NODE_ENV === \"production\" ? config.prod : config.dev;\n","import axios from \"axios\";\nimport { axiosConfig, check, config } from \"./common\";\n\nexport let lastUrl = null;\n\nexport function setLastUrl(url) {\n  lastUrl = url;\n}\n\n/**\n * Check if the username is used.\n */\nexport async function checkUsername(username) {\n  const urlStr = config.server + \"/api/check/username/\" + username;\n  return await axios.get(urlStr, axiosConfig);\n}\n\n/**\n * Check if the user is registered by email.\n */\nexport async function checkEmail(email) {\n  const urlStr = config.server + \"/api/check/email/\" + email;\n  return await axios.get(urlStr, axiosConfig);\n}\n\n/**\n * Get all groups from database.\n */\nexport async function getAllGroups() {\n  const urlStr = config.server + \"/api/v2/groups\";\n  const result = await axios.get(urlStr);\n  return result.data.groups;\n}\n\nexport async function getAllOrganizations(groupNumber) {\n  let urlStr = config.server + \"/api/v2/organizations\";\n  if (groupNumber) {\n    urlStr += \"?groupNumber=\" + groupNumber;\n  }\n  try {\n    const result = await axios.get(urlStr);\n    return result.data.organizations;\n  } catch (e) {\n    throw e;\n  }\n}\n\nexport async function getAllRequestUsers() {\n  let results = [];\n  try {\n    const users = await getAllUsers();\n    results = users.filter((u) => u.validated === false);\n  } catch (e) {\n    throw e;\n  }\n  return results;\n}\n\nexport async function switchUserActive(username, activeValue) {\n  try {\n    return await axios.put(\n      config.server + \"/api/users/active/\" + username,\n      { active: activeValue },\n      axiosConfig\n    );\n  } catch (e) {\n    return e;\n  }\n}\n\nexport async function switchUserValidate(user, validatedValue) {\n  // change the status of validate\n  try {\n    let result = [];\n    const url = config.server + \"/api/users/validated/\" + user.username;\n    console.log(url);\n    const resValidated = await axios.put(\n      url,\n      { validated: validatedValue },\n      axiosConfig\n    );\n    result.push(resValidated);\n    // add this user to the organization when validate is ture\n    // subtract this user from the organization when validate is false\n    if (user.organization) {\n      const resOrganization = await axios.post(\n        config.server +\n          \"/api/v2/organization/\" +\n          user.organization +\n          \"/\" +\n          user._id,\n        { validated: validatedValue },\n        axiosConfig\n      );\n      result.push(resOrganization);\n      return result;\n    }\n  } catch (e) {\n    return e;\n  }\n}\n\n/**\n * Check if the user is logged in, result will go to call back function.\n * Available to use right after the web page refreshes, to check if there is a user logged in.\n */\nexport async function isLoggedIn() {\n  return (await axios.get(config.server + \"/api/isloggedin\", axiosConfig)).data\n    .isLoggedIn;\n}\n\nexport async function logout() {\n  localStorage.removeItem(\"user\");\n  //   await axios.get(config.server + \"/api/logout\", axiosConfig);\n  window.location.hash = \"login\";\n}\n\n/**\n *\n * @param username\n * @param password\n * @return {AxiosPromise<any>}\n */\nexport async function loginLocal(username, password) {\n  try {\n    const response = await axios.post(\n      config.server + \"/api/login/local\",\n      {\n        username: username,\n        password: password,\n      },\n      axiosConfig\n    );\n    console.log(\"Inside loginLocal method\");\n    console.log(response.data);\n    if (response.data.accessToken) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    }\n\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function signUpLocal(\n  setup,\n  username,\n  password,\n  firstName,\n  lastName,\n  selectedOrganization,\n  email,\n  phoneNumber,\n  selectedGroupNumber\n) {\n  return await axios.post(\n    config.server + (setup ? \"/api/setup\" : \"/api/signup/local\"),\n    {\n      username: username,\n      password: password,\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      phoneNumber: phoneNumber,\n      groupNumber: selectedGroupNumber,\n      organization: selectedOrganization,\n    },\n    axiosConfig\n  );\n}\n\nexport async function sendPasswordResetEmail(email) {}\n\nexport async function updatePermission(username, permissions, active) {\n  // console.log(username, permissions, active);\n  const response = await axios.post(\n    config.server + \"/api/user/permission\",\n    {\n      permissions: [\n        {\n          username,\n          permissions,\n          active,\n        },\n      ],\n    },\n    axiosConfig\n  );\n  if (check(response)) return response;\n}\n\nexport async function getAllPermissions() {\n  const response = await axios.get(\n    config.server + \"/api/permissions\",\n    axiosConfig\n  );\n  if (check(response)) return response.data.permissions;\n}\n\nexport async function getAllUsers() {\n  const response = await axios.get(\n    config.server + \"/api/user/details\",\n    axiosConfig\n  );\n  if (check(response)) return response.data.users;\n}\n\nexport async function getProfile() {\n  try {\n    const response = await axios.get(\n      config.server + \"/api/profile\",\n      axiosConfig\n    );\n    if (check(response)) return response.data.profile;\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import React, {Component} from 'react';\nimport {sendPasswordResetEmail} from \"../../../controller/userManager\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Container,\n  Form,\n  FormText,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row\n} from 'reactstrap';\nimport {Link} from \"react-router-dom\";\n\n\nclass ForgetPassword extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      message: '',\n    };\n  }\n\n  validateForm() {\n    return this.state.email.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    sendPasswordResetEmail(this.state.email)\n      .then(() => {\n        this.setState({message: 'Email sent, please check your email for further action.'});\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({message: err.message});\n      })\n  };\n\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\n              <Card className=\"mx-4\">\n                <CardBody className=\"p-4\">\n                  <Form onSubmit={this.handleSubmit}>\n                    <h1>Reset Password</h1>\n                    <p className=\"text-muted\">Enter your email:</p>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>@</InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"email\" id=\"email\" placeholder=\"Email\" autoComplete=\"email\"\n                             value={this.state.email} onChange={this.handleChange}/>\n                    </InputGroup>\n\n                    <FormText color=\"muted\">\n                      {this.state.message}\n                    </FormText>\n                    <br/>\n                    <Button color=\"success\" disabled={!this.validateForm()} block>Send Reset Email</Button>\n                  </Form>\n                  <br/>\n                  <Link to=\"/login\">\n                    <Button color=\"link\"><span>Ready to log in?</span></Button>\n                  </Link>\n                  <br/>\n                  <Link to=\"/register\">\n                    <Button color=\"link\"><span>Register a new account?</span></Button>\n                  </Link>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ForgetPassword;\n"],"sourceRoot":""}