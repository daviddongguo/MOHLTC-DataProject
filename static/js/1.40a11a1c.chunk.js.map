{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/debounce.js","../node_modules/@material-ui/core/esm/utils/isMuiElement.js","../node_modules/@material-ui/core/esm/List/ListContext.js","../node_modules/@material-ui/core/esm/FormControl/formControlState.js","../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","../node_modules/@material-ui/core/esm/Popover/Popover.js","../node_modules/@material-ui/core/esm/InputBase/utils.js","../node_modules/@material-ui/core/esm/InputBase/InputBase.js","../node_modules/@material-ui/core/esm/TextareaAutosize/TextareaAutosize.js"],"names":["debounce","func","timeout","wait","arguments","length","undefined","debounced","_len","args","Array","_key","that","this","later","apply","clearTimeout","setTimeout","clear","isMuiElement","element","muiNames","React","indexOf","type","muiName","ListContext","formControlState","_ref","props","states","muiFormControl","reduce","acc","state","FormControlContext","useFormControl","getOffsetTop","rect","vertical","offset","height","getOffsetLeft","horizontal","width","getTransformOriginValue","transformOrigin","map","n","concat","join","getAnchorEl","anchorEl","Popover","ref","action","_props$anchorOrigin","anchorOrigin","anchorPosition","_props$anchorReferenc","anchorReference","children","classes","className","containerProp","container","_props$elevation","elevation","getContentAnchorEl","_props$marginThreshol","marginThreshold","onEnter","onEntered","onEntering","onExit","onExited","onExiting","open","_props$PaperProps","PaperProps","_props$transformOrigi","_props$TransitionComp","TransitionComponent","Grow","_props$transitionDura","transitionDuration","transitionDurationProp","_props$TransitionProp","TransitionProps","other","_objectWithoutProperties","paperRef","getAnchorOffset","contentAnchorOffset","resolvedAnchorEl","anchorRect","nodeType","ownerDocument","current","body","getBoundingClientRect","anchorVertical","top","left","getContentAnchorOffset","contentAnchorEl","contains","scrollTop","parent","child","parentElement","getScrollParent","offsetTop","clientHeight","process","getTransformOrigin","elemRect","getPositioningStyle","offsetWidth","offsetHeight","elemTransformOrigin","anchorOffset","bottom","right","containerWindow","ownerWindow","heightThreshold","innerHeight","widthThreshold","innerWidth","diff","_diff","_diff2","_diff3","Math","round","setPositioningStyles","positioning","style","handlePaperRef","instance","ReactDOM","updatePosition","handleResize","window","addEventListener","removeEventListener","muiSupportAuto","Modal","_extends","BackdropProps","invisible","clsx","root","appear","in","createChainedFunction","isAppearing","Paper","paper","withStyles","position","overflowY","overflowX","minWidth","minHeight","maxWidth","maxHeight","outline","name","hasValue","value","isArray","isFilled","obj","SSR","defaultValue","isAdornedStart","startAdornment","useEnhancedEffect","InputBase","ariaDescribedby","autoComplete","autoFocus","color","disabled","endAdornment","_props$fullWidth","error","fullWidth","id","_props$inputComponent","inputComponent","_props$inputProps","inputProps","inputPropsProp","inputRefProp","inputRef","_props$multiline","margin","multiline","onBlur","onChange","onClick","onFocus","onKeyDown","onKeyUp","placeholder","readOnly","renderSuffix","rows","rowsMax","rowsMin","_props$type","valueProp","isControlled","handleInputRefWarning","handleInputPropsRefProp","useForkRef","handleInputRefProp","handleInputRef","_React$useState","focused","setFocused","fcs","onFilled","onEmpty","checkDirty","InputComponent","TextareaAutosize","setAdornedStart","Boolean","capitalize","formControl","adornedStart","adornedEnd","marginDense","event","currentTarget","target","focus","Provider","onAnimationStart","animationName","required","input","inputMultiline","hiddenLabel","inputHiddenLabel","inputAdornedStart","inputAdornedEnd","inputTypeSearch","inputMarginDense","Error","_formatMuiErrorMessage","stopPropagation","theme","light","palette","opacity","transition","transitions","create","duration","shorter","placeholderHidden","placeholderVisible","typography","body1","text","primary","lineHeight","boxSizing","cursor","display","alignItems","padding","paddingTop","colorSecondary","font","letterSpacing","border","background","WebkitTapHighlightColor","animationDuration","boxShadow","resize","getStyleValue","computedStyle","property","parseInt","styles","visibility","overflow","transform","_props$rowsMin","rowsMinProp","handleRef","shadowRef","renders","setState","syncHeight","getComputedStyle","inputShallow","slice","scrollHeight","singleRowHeight","outerHeight","max","Number","min","outerHeightStyle","abs","prevState","tabIndex"],"mappings":"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","file":"static/js/1.40a11a1c.chunk.js","sourcesContent":["// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;\n  var timeout;\n\n  function debounced() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // eslint-disable-next-line consistent-this\n    var that = this;\n\n    var later = function later() {\n      func.apply(that, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = function () {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar ListContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}\n\nexport default ListContext;","export default function formControlState(_ref) {\n  var props = _ref.props,\n      states = _ref.states,\n      muiFormControl = _ref.muiFormControl;\n  return states.reduce(function (acc, state) {\n    acc[state] = props[state];\n\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n\n    return acc;\n  }, {});\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport { chainPropTypes, elementTypeAcceptingRef, refType, HTMLElementType } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport clsx from 'clsx';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport Modal from '../Modal';\nimport Grow from '../Grow';\nimport Paper from '../Paper';\nexport function getOffsetTop(rect, vertical) {\n  var offset = 0;\n\n  if (typeof vertical === 'number') {\n    offset = vertical;\n  } else if (vertical === 'center') {\n    offset = rect.height / 2;\n  } else if (vertical === 'bottom') {\n    offset = rect.height;\n  }\n\n  return offset;\n}\nexport function getOffsetLeft(rect, horizontal) {\n  var offset = 0;\n\n  if (typeof horizontal === 'number') {\n    offset = horizontal;\n  } else if (horizontal === 'center') {\n    offset = rect.width / 2;\n  } else if (horizontal === 'right') {\n    offset = rect.width;\n  }\n\n  return offset;\n}\n\nfunction getTransformOriginValue(transformOrigin) {\n  return [transformOrigin.horizontal, transformOrigin.vertical].map(function (n) {\n    return typeof n === 'number' ? \"\".concat(n, \"px\") : n;\n  }).join(' ');\n} // Sum the scrollTop between two elements.\n\n\nfunction getScrollParent(parent, child) {\n  var element = child;\n  var scrollTop = 0;\n\n  while (element && element !== parent) {\n    element = element.parentElement;\n    scrollTop += element.scrollTop;\n  }\n\n  return scrollTop;\n}\n\nfunction getAnchorEl(anchorEl) {\n  return typeof anchorEl === 'function' ? anchorEl() : anchorEl;\n}\n\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    position: 'absolute',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    // So we see the popover when it's empty.\n    // It's most likely on issue on userland.\n    minWidth: 16,\n    minHeight: 16,\n    maxWidth: 'calc(100% - 32px)',\n    maxHeight: 'calc(100% - 32px)',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  }\n};\nvar Popover = /*#__PURE__*/React.forwardRef(function Popover(props, ref) {\n  var action = props.action,\n      anchorEl = props.anchorEl,\n      _props$anchorOrigin = props.anchorOrigin,\n      anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'top',\n    horizontal: 'left'\n  } : _props$anchorOrigin,\n      anchorPosition = props.anchorPosition,\n      _props$anchorReferenc = props.anchorReference,\n      anchorReference = _props$anchorReferenc === void 0 ? 'anchorEl' : _props$anchorReferenc,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      containerProp = props.container,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 8 : _props$elevation,\n      getContentAnchorEl = props.getContentAnchorEl,\n      _props$marginThreshol = props.marginThreshold,\n      marginThreshold = _props$marginThreshol === void 0 ? 16 : _props$marginThreshol,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$transformOrigi = props.transformOrigin,\n      transformOrigin = _props$transformOrigi === void 0 ? {\n    vertical: 'top',\n    horizontal: 'left'\n  } : _props$transformOrigi,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDurationProp = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\n      _props$TransitionProp = props.TransitionProps,\n      TransitionProps = _props$TransitionProp === void 0 ? {} : _props$TransitionProp,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorEl\", \"anchorOrigin\", \"anchorPosition\", \"anchorReference\", \"children\", \"classes\", \"className\", \"container\", \"elevation\", \"getContentAnchorEl\", \"marginThreshold\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperProps\", \"transformOrigin\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var paperRef = React.useRef(); // Returns the top/left offset of the position\n  // to attach to on the anchor element (or body if none is provided)\n\n  var getAnchorOffset = React.useCallback(function (contentAnchorOffset) {\n    if (anchorReference === 'anchorPosition') {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!anchorPosition) {\n          console.error('Material-UI: You need to provide a `anchorPosition` prop when using ' + '<Popover anchorReference=\"anchorPosition\" />.');\n        }\n      }\n\n      return anchorPosition;\n    }\n\n    var resolvedAnchorEl = getAnchorEl(anchorEl); // If an anchor element wasn't provided, just use the parent body element of this Popover\n\n    var anchorElement = resolvedAnchorEl && resolvedAnchorEl.nodeType === 1 ? resolvedAnchorEl : ownerDocument(paperRef.current).body;\n    var anchorRect = anchorElement.getBoundingClientRect();\n\n    if (process.env.NODE_ENV !== 'production') {\n      var box = anchorElement.getBoundingClientRect();\n\n      if (process.env.NODE_ENV !== 'test' && box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {\n        console.warn(['Material-UI: The `anchorEl` prop provided to the component is invalid.', 'The anchor element should be part of the document layout.', \"Make sure the element is present in the document or that it's not display none.\"].join('\\n'));\n      }\n    }\n\n    var anchorVertical = contentAnchorOffset === 0 ? anchorOrigin.vertical : 'center';\n    return {\n      top: anchorRect.top + getOffsetTop(anchorRect, anchorVertical),\n      left: anchorRect.left + getOffsetLeft(anchorRect, anchorOrigin.horizontal)\n    };\n  }, [anchorEl, anchorOrigin.horizontal, anchorOrigin.vertical, anchorPosition, anchorReference]); // Returns the vertical offset of inner content to anchor the transform on if provided\n\n  var getContentAnchorOffset = React.useCallback(function (element) {\n    var contentAnchorOffset = 0;\n\n    if (getContentAnchorEl && anchorReference === 'anchorEl') {\n      var contentAnchorEl = getContentAnchorEl(element);\n\n      if (contentAnchorEl && element.contains(contentAnchorEl)) {\n        var scrollTop = getScrollParent(element, contentAnchorEl);\n        contentAnchorOffset = contentAnchorEl.offsetTop + contentAnchorEl.clientHeight / 2 - scrollTop || 0;\n      } // != the default value\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (anchorOrigin.vertical !== 'top') {\n          console.error(['Material-UI: You can not change the default `anchorOrigin.vertical` value ', 'when also providing the `getContentAnchorEl` prop to the popover component.', 'Only use one of the two props.', 'Set `getContentAnchorEl` to `null | undefined`' + ' or leave `anchorOrigin.vertical` unchanged.'].join('\\n'));\n        }\n      }\n    }\n\n    return contentAnchorOffset;\n  }, [anchorOrigin.vertical, anchorReference, getContentAnchorEl]); // Return the base transform origin using the element\n  // and taking the content anchor offset into account if in use\n\n  var getTransformOrigin = React.useCallback(function (elemRect) {\n    var contentAnchorOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return {\n      vertical: getOffsetTop(elemRect, transformOrigin.vertical) + contentAnchorOffset,\n      horizontal: getOffsetLeft(elemRect, transformOrigin.horizontal)\n    };\n  }, [transformOrigin.horizontal, transformOrigin.vertical]);\n  var getPositioningStyle = React.useCallback(function (element) {\n    // Check if the parent has requested anchoring on an inner content node\n    var contentAnchorOffset = getContentAnchorOffset(element);\n    var elemRect = {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    }; // Get the transform origin point on the element itself\n\n    var elemTransformOrigin = getTransformOrigin(elemRect, contentAnchorOffset);\n\n    if (anchorReference === 'none') {\n      return {\n        top: null,\n        left: null,\n        transformOrigin: getTransformOriginValue(elemTransformOrigin)\n      };\n    } // Get the offset of of the anchoring element\n\n\n    var anchorOffset = getAnchorOffset(contentAnchorOffset); // Calculate element positioning\n\n    var top = anchorOffset.top - elemTransformOrigin.vertical;\n    var left = anchorOffset.left - elemTransformOrigin.horizontal;\n    var bottom = top + elemRect.height;\n    var right = left + elemRect.width; // Use the parent window of the anchorEl if provided\n\n    var containerWindow = ownerWindow(getAnchorEl(anchorEl)); // Window thresholds taking required margin into account\n\n    var heightThreshold = containerWindow.innerHeight - marginThreshold;\n    var widthThreshold = containerWindow.innerWidth - marginThreshold; // Check if the vertical axis needs shifting\n\n    if (top < marginThreshold) {\n      var diff = top - marginThreshold;\n      top -= diff;\n      elemTransformOrigin.vertical += diff;\n    } else if (bottom > heightThreshold) {\n      var _diff = bottom - heightThreshold;\n\n      top -= _diff;\n      elemTransformOrigin.vertical += _diff;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (elemRect.height > heightThreshold && elemRect.height && heightThreshold) {\n        console.error(['Material-UI: The popover component is too tall.', \"Some part of it can not be seen on the screen (\".concat(elemRect.height - heightThreshold, \"px).\"), 'Please consider adding a `max-height` to improve the user-experience.'].join('\\n'));\n      }\n    } // Check if the horizontal axis needs shifting\n\n\n    if (left < marginThreshold) {\n      var _diff2 = left - marginThreshold;\n\n      left -= _diff2;\n      elemTransformOrigin.horizontal += _diff2;\n    } else if (right > widthThreshold) {\n      var _diff3 = right - widthThreshold;\n\n      left -= _diff3;\n      elemTransformOrigin.horizontal += _diff3;\n    }\n\n    return {\n      top: \"\".concat(Math.round(top), \"px\"),\n      left: \"\".concat(Math.round(left), \"px\"),\n      transformOrigin: getTransformOriginValue(elemTransformOrigin)\n    };\n  }, [anchorEl, anchorReference, getAnchorOffset, getContentAnchorOffset, getTransformOrigin, marginThreshold]);\n  var setPositioningStyles = React.useCallback(function () {\n    var element = paperRef.current;\n\n    if (!element) {\n      return;\n    }\n\n    var positioning = getPositioningStyle(element);\n\n    if (positioning.top !== null) {\n      element.style.top = positioning.top;\n    }\n\n    if (positioning.left !== null) {\n      element.style.left = positioning.left;\n    }\n\n    element.style.transformOrigin = positioning.transformOrigin;\n  }, [getPositioningStyle]);\n\n  var handleEntering = function handleEntering(element, isAppearing) {\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n\n    setPositioningStyles();\n  };\n\n  var handlePaperRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    paperRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  React.useEffect(function () {\n    if (open) {\n      setPositioningStyles();\n    }\n  });\n  React.useImperativeHandle(action, function () {\n    return open ? {\n      updatePosition: function updatePosition() {\n        setPositioningStyles();\n      }\n    } : null;\n  }, [open, setPositioningStyles]);\n  React.useEffect(function () {\n    if (!open) {\n      return undefined;\n    }\n\n    var handleResize = debounce(function () {\n      setPositioningStyles();\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [open, setPositioningStyles]);\n  var transitionDuration = transitionDurationProp;\n\n  if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) {\n    transitionDuration = undefined;\n  } // If the container prop is provided, use that\n  // If the anchorEl prop is provided, use its parent body element as the container\n  // If neither are provided let the Modal take care of choosing the container\n\n\n  var container = containerProp || (anchorEl ? ownerDocument(getAnchorEl(anchorEl)).body : undefined);\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    container: container,\n    open: open,\n    ref: ref,\n    BackdropProps: {\n      invisible: true\n    },\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: onEnter,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExited: onExited,\n    onExiting: onExiting,\n    timeout: transitionDuration\n  }, TransitionProps, {\n    onEntering: createChainedFunction(handleEntering, TransitionProps.onEntering)\n  }), /*#__PURE__*/React.createElement(Paper, _extends({\n    elevation: elevation,\n    ref: handlePaperRef\n  }, PaperProps, {\n    className: clsx(classes.paper, PaperProps.className)\n  }), children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Popover.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports updatePosition() action.\n   */\n  action: refType,\n\n  /**\n   * A HTML element, or a function that returns it.\n   * It's used to set the position of the popover.\n   */\n  anchorEl: chainPropTypes(PropTypes.oneOfType([HTMLElementType, PropTypes.func]), function (props) {\n    if (props.open && (!props.anchorReference || props.anchorReference === 'anchorEl')) {\n      var resolvedAnchorEl = getAnchorEl(props.anchorEl);\n\n      if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {\n        var box = resolvedAnchorEl.getBoundingClientRect();\n\n        if (process.env.NODE_ENV !== 'test' && box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {\n          return new Error(['Material-UI: The `anchorEl` prop provided to the component is invalid.', 'The anchor element should be part of the document layout.', \"Make sure the element is present in the document or that it's not display none.\"].join('\\n'));\n        }\n      } else {\n        return new Error(['Material-UI: The `anchorEl` prop provided to the component is invalid.', \"It should be an Element instance but it's `\".concat(resolvedAnchorEl, \"` instead.\")].join('\\n'));\n      }\n    }\n\n    return null;\n  }),\n\n  /**\n   * This is the point on the anchor where the popover's\n   * `anchorEl` will attach to. This is not used when the\n   * anchorReference is 'anchorPosition'.\n   *\n   * Options:\n   * vertical: [top, center, bottom];\n   * horizontal: [left, center, right].\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOfType([PropTypes.oneOf(['center', 'left', 'right']), PropTypes.number]).isRequired,\n    vertical: PropTypes.oneOfType([PropTypes.oneOf(['bottom', 'center', 'top']), PropTypes.number]).isRequired\n  }),\n\n  /**\n   * This is the position that may be used\n   * to set the position of the popover.\n   * The coordinates are relative to\n   * the application's client area.\n   */\n  anchorPosition: PropTypes.shape({\n    left: PropTypes.number.isRequired,\n    top: PropTypes.number.isRequired\n  }),\n\n  /**\n   * This determines which anchor prop to refer to to set\n   * the position of the popover.\n   */\n  anchorReference: PropTypes.oneOf(['anchorEl', 'anchorPosition', 'none']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A HTML element, component instance, or function that returns either.\n   * The `container` will passed to the Modal component.\n   *\n   * By default, it uses the body of the anchorEl's top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.instanceOf(React.Component), PropTypes.func]),\n\n  /**\n   * The elevation of the popover.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * This function is called in order to retrieve the content anchor element.\n   * It's the opposite of the `anchorEl` prop.\n   * The content anchor element should be an element inside the popover.\n   * It's used to correctly scroll and set the position of the popover.\n   * The positioning strategy tries to make the content anchor element just above the\n   * anchor element.\n   */\n  getContentAnchorEl: PropTypes.func,\n\n  /**\n   * Specifies how close to the edge of the window the popover can appear.\n   */\n  marginThreshold: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the component is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the component has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the component is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the component is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the component has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the component is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the popover is visible.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    component: elementTypeAcceptingRef\n  }),\n\n  /**\n   * This is the point on the popover which\n   * will attach to the anchor's origin.\n   *\n   * Options:\n   * vertical: [top, center, bottom, x(px)];\n   * horizontal: [left, center, right, x(px)].\n   */\n  transformOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOfType([PropTypes.oneOf(['center', 'left', 'right']), PropTypes.number]).isRequired,\n    vertical: PropTypes.oneOfType([PropTypes.oneOf(['bottom', 'center', 'top']), PropTypes.number]).isRequired\n  }),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPopover'\n})(Popover);","// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\nexport function isFilled(obj) {\n  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport formControlState from '../FormControl/formControlState';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport TextareaAutosize from '../TextareaAutosize';\nimport { isFilled } from './utils';\nexport var styles = function styles(theme) {\n  var light = theme.palette.type === 'light';\n  var placeholder = {\n    color: 'currentColor',\n    opacity: light ? 0.42 : 0.5,\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.shorter\n    })\n  };\n  var placeholderHidden = {\n    opacity: '0 !important'\n  };\n  var placeholderVisible = {\n    opacity: light ? 0.42 : 0.5\n  };\n  return {\n    '@global': {\n      '@keyframes mui-auto-fill': {},\n      '@keyframes mui-auto-fill-cancel': {}\n    },\n\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, {\n      color: theme.palette.text.primary,\n      lineHeight: '1.1876em',\n      // Reset (19px), match the native input line-height\n      boxSizing: 'border-box',\n      // Prevent padding issue with fullWidth.\n      position: 'relative',\n      cursor: 'text',\n      display: 'inline-flex',\n      alignItems: 'center',\n      '&$disabled': {\n        color: theme.palette.text.disabled,\n        cursor: 'default'\n      }\n    }),\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {},\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {},\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: \"\".concat(8 - 2, \"px 0 \").concat(8 - 1, \"px\"),\n      '&$marginDense': {\n        paddingTop: 4 - 1\n      }\n    },\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the `input` element. */\n    input: {\n      font: 'inherit',\n      letterSpacing: 'inherit',\n      color: 'currentColor',\n      padding: \"\".concat(8 - 2, \"px 0 \").concat(8 - 1, \"px\"),\n      border: 0,\n      boxSizing: 'content-box',\n      background: 'none',\n      height: '1.1876em',\n      // Reset (19px), match the native input line-height\n      margin: 0,\n      // Reset for Safari\n      WebkitTapHighlightColor: 'transparent',\n      display: 'block',\n      // Make the flex item shrink with Firefox\n      minWidth: 0,\n      width: '100%',\n      // Fix IE 11 width issue\n      animationName: 'mui-auto-fill-cancel',\n      animationDuration: '10ms',\n      '&::-webkit-input-placeholder': placeholder,\n      '&::-moz-placeholder': placeholder,\n      // Firefox 19+\n      '&:-ms-input-placeholder': placeholder,\n      // IE 11\n      '&::-ms-input-placeholder': placeholder,\n      // Edge\n      '&:focus': {\n        outline: 0\n      },\n      // Reset Firefox invalid required input style\n      '&:invalid': {\n        boxShadow: 'none'\n      },\n      '&::-webkit-search-decoration': {\n        // Remove the padding when type=search.\n        '-webkit-appearance': 'none'\n      },\n      // Show and hide the placeholder logic\n      'label[data-shrink=false] + $formControl &': {\n        '&::-webkit-input-placeholder': placeholderHidden,\n        '&::-moz-placeholder': placeholderHidden,\n        // Firefox 19+\n        '&:-ms-input-placeholder': placeholderHidden,\n        // IE 11\n        '&::-ms-input-placeholder': placeholderHidden,\n        // Edge\n        '&:focus::-webkit-input-placeholder': placeholderVisible,\n        '&:focus::-moz-placeholder': placeholderVisible,\n        // Firefox 19+\n        '&:focus:-ms-input-placeholder': placeholderVisible,\n        // IE 11\n        '&:focus::-ms-input-placeholder': placeholderVisible // Edge\n\n      },\n      '&$disabled': {\n        opacity: 1 // Reset iOS opacity\n\n      },\n      '&:-webkit-autofill': {\n        animationDuration: '5000s',\n        animationName: 'mui-auto-fill'\n      }\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 4 - 1\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      height: 'auto',\n      resize: 'none',\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {\n      // Improve type search style.\n      '-moz-appearance': 'textfield',\n      '-webkit-appearance': 'textfield'\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {},\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {},\n\n    /* Styles applied to the `input` element if `hiddenLabel={true}`. */\n    inputHiddenLabel: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * `InputBase` contains as few styles as possible.\n * It aims to be a simple building block for creating an input.\n * It contains a load of style reset and some state logic.\n */\n\nvar InputBase = /*#__PURE__*/React.forwardRef(function InputBase(props, ref) {\n  var ariaDescribedby = props['aria-describedby'],\n      autoComplete = props.autoComplete,\n      autoFocus = props.autoFocus,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      defaultValue = props.defaultValue,\n      disabled = props.disabled,\n      endAdornment = props.endAdornment,\n      error = props.error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      id = props.id,\n      _props$inputComponent = props.inputComponent,\n      inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,\n      _props$inputProps = props.inputProps,\n      inputPropsProp = _props$inputProps === void 0 ? {} : _props$inputProps,\n      inputRefProp = props.inputRef,\n      margin = props.margin,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      placeholder = props.placeholder,\n      readOnly = props.readOnly,\n      renderSuffix = props.renderSuffix,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      rowsMin = props.rowsMin,\n      startAdornment = props.startAdornment,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'text' : _props$type,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"aria-describedby\", \"autoComplete\", \"autoFocus\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"fullWidth\", \"id\", \"inputComponent\", \"inputProps\", \"inputRef\", \"margin\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"placeholder\", \"readOnly\", \"renderSuffix\", \"rows\", \"rowsMax\", \"rowsMin\", \"startAdornment\", \"type\", \"value\"]);\n\n  var value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef();\n  var handleInputRefWarning = React.useCallback(function (instance) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['Material-UI: You have provided a `inputComponent` to the input component', 'that does not correctly handle the `inputRef` prop.', 'Make sure the `inputRef` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  var handleInputPropsRefProp = useForkRef(inputPropsProp.ref, handleInputRefWarning);\n  var handleInputRefProp = useForkRef(inputRefProp, handleInputPropsRefProp);\n  var handleInputRef = useForkRef(inputRef, handleInputRefProp);\n\n  var _React$useState = React.useState(false),\n      focused = _React$useState[0],\n      setFocused = _React$useState[1];\n\n  var muiFormControl = useFormControl();\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (muiFormControl) {\n        return muiFormControl.registerEffect();\n      }\n\n      return undefined;\n    }, [muiFormControl]);\n  }\n\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['color', 'disabled', 'error', 'hiddenLabel', 'margin', 'required', 'filled']\n  });\n  fcs.focused = muiFormControl ? muiFormControl.focused : focused; // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(function () {\n    if (!muiFormControl && disabled && focused) {\n      setFocused(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [muiFormControl, disabled, focused, onBlur]);\n  var onFilled = muiFormControl && muiFormControl.onFilled;\n  var onEmpty = muiFormControl && muiFormControl.onEmpty;\n  var checkDirty = React.useCallback(function (obj) {\n    if (isFilled(obj)) {\n      if (onFilled) {\n        onFilled();\n      }\n    } else if (onEmpty) {\n      onEmpty();\n    }\n  }, [onFilled, onEmpty]);\n  useEnhancedEffect(function () {\n    if (isControlled) {\n      checkDirty({\n        value: value\n      });\n    }\n  }, [value, checkDirty, isControlled]);\n\n  var handleFocus = function handleFocus(event) {\n    // Fix a bug with IE 11 where the focus/blur events are triggered\n    // while the input is disabled.\n    if (fcs.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (inputPropsProp.onFocus) {\n      inputPropsProp.onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (inputPropsProp.onBlur) {\n      inputPropsProp.onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    } else {\n      setFocused(false);\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      var element = event.target || inputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://material-ui.com/r/input-component-ref-interface for more info.\" : _formatMuiErrorMessage(1));\n      }\n\n      checkDirty({\n        value: element.value\n      });\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (inputPropsProp.onChange) {\n      inputPropsProp.onChange.apply(inputPropsProp, [event].concat(args));\n    } // Perform in the willUpdate\n\n\n    if (onChange) {\n      onChange.apply(void 0, [event].concat(args));\n    }\n  }; // Check the input state on mount, in case it was filled by the user\n  // or auto filled by the browser before the hydration (for SSR).\n\n\n  React.useEffect(function () {\n    checkDirty(inputRef.current);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleClick = function handleClick(event) {\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var InputComponent = inputComponent;\n\n  var inputProps = _extends({}, inputPropsProp, {\n    ref: handleInputRef\n  });\n\n  if (typeof InputComponent !== 'string') {\n    inputProps = _extends({\n      // Rename ref to inputRef as we don't know the\n      // provided `inputComponent` structure.\n      inputRef: handleInputRef,\n      type: type\n    }, inputProps, {\n      ref: null\n    });\n  } else if (multiline) {\n    if (rows && !rowsMax && !rowsMin) {\n      InputComponent = 'textarea';\n    } else {\n      inputProps = _extends({\n        rows: rows,\n        rowsMax: rowsMax\n      }, inputProps);\n      InputComponent = TextareaAutosize;\n    }\n  } else {\n    inputProps = _extends({\n      type: type\n    }, inputProps);\n  }\n\n  var handleAutoFill = function handleAutoFill(event) {\n    // Provide a fake value as Chrome might not let you access it for security reasons.\n    checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : {\n      value: 'x'\n    });\n  };\n\n  React.useEffect(function () {\n    if (muiFormControl) {\n      muiFormControl.setAdornedStart(Boolean(startAdornment));\n    }\n  }, [muiFormControl, startAdornment]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fullWidth && classes.fullWidth, fcs.focused && classes.focused, muiFormControl && classes.formControl, multiline && classes.multiline, startAdornment && classes.adornedStart, endAdornment && classes.adornedEnd, fcs.margin === 'dense' && classes.marginDense),\n    onClick: handleClick,\n    ref: ref\n  }, other), startAdornment, /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-invalid\": fcs.error,\n    \"aria-describedby\": ariaDescribedby,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    disabled: fcs.disabled,\n    id: id,\n    onAnimationStart: handleAutoFill,\n    name: name,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    required: fcs.required,\n    rows: rows,\n    value: value,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp\n  }, inputProps, {\n    className: clsx(classes.input, inputPropsProp.className, fcs.disabled && classes.disabled, multiline && classes.inputMultiline, fcs.hiddenLabel && classes.inputHiddenLabel, startAdornment && classes.inputAdornedStart, endAdornment && classes.inputAdornedEnd, type === 'search' && classes.inputTypeSearch, fcs.margin === 'dense' && classes.inputMarginDense),\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus\n  }))), endAdornment, renderSuffix ? renderSuffix(_extends({}, fcs, {\n    startAdornment: startAdornment\n  })) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? InputBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the input is blurred.\n   *\n   * Notice that the first argument (event) might be undefined.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  renderSuffix: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  rowsMin: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputBase'\n})(InputBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nvar TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  var onChange = props.onChange,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$rowsMin = props.rowsMin,\n      rowsMinProp = _props$rowsMin === void 0 ? 1 : _props$rowsMin,\n      style = props.style,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"onChange\", \"rows\", \"rowsMax\", \"rowsMin\", \"style\", \"value\"]);\n\n  var rowsMin = rows || rowsMinProp;\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef(null);\n  var handleRef = useForkRef(ref, inputRef);\n  var shadowRef = React.useRef(null);\n  var renders = React.useRef(0);\n\n  var _React$useState = React.useState({}),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var syncHeight = React.useCallback(function () {\n    var input = inputRef.current;\n    var computedStyle = window.getComputedStyle(input);\n    var inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    var boxSizing = computedStyle['box-sizing'];\n    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    var innerHeight = inputShallow.scrollHeight - padding; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    var singleRowHeight = inputShallow.scrollHeight - padding; // The height of the outer content\n\n    var outerHeight = innerHeight;\n\n    if (rowsMin) {\n      outerHeight = Math.max(Number(rowsMin) * singleRowHeight, outerHeight);\n    }\n\n    if (rowsMax) {\n      outerHeight = Math.min(Number(rowsMax) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    var overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    setState(function (prevState) {\n      // Need a large enough difference to update the height.\n      // This prevents infinite rendering loop.\n      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n        renders.current += 1;\n        return {\n          overflow: overflow,\n          outerHeightStyle: outerHeightStyle\n        };\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (renders.current === 20) {\n          console.error(['Material-UI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n        }\n      }\n\n      return prevState;\n    });\n  }, [rowsMax, rowsMin, props.placeholder]);\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      renders.current = 0;\n      syncHeight();\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(function () {\n    syncHeight();\n  });\n  React.useEffect(function () {\n    renders.current = 0;\n  }, [value]);\n\n  var handleChange = function handleChange(event) {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", _extends({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n    rows: rowsMin,\n    style: _extends({\n      height: state.outerHeightStyle,\n      // Need a large enough difference to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: state.overflow ? 'hidden' : null\n    }, style)\n  }, other)), /*#__PURE__*/React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: _extends({}, styles.shadow, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Use `rowsMin` instead. The prop will be removed in v5.\n   *\n   * @deprecated\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   */\n  rowsMin: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;"],"sourceRoot":""}